name: "Terraform Checks"

on:
  workflow_dispatch:
  push:
    paths:
      - "**.tf"
      - ".github/workflows/terraform.yml"
      - "tflints.sh"
  pull_request:
    paths:
      - "**.tf"
      - ".github/workflows/terraform.yml"
      - "tflints.sh"

jobs:
  tflint:
    name: Terraform Lint Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
        # Using apt-key here for simplicity since this system is just for CI, but it should not be used in production!
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install terraform

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v1
      with:
        tflint_version: latest

    - name: Run TFLint
      run: ./tflints.sh

  tfsec:
    name: Terraform Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code üõé
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Terraform Security Checks üîç
        uses: triat/terraform-security-scan@v3
        with:
          tfsec_actions_working_dir: terraform/modules/remote-dev
